@page "/Comment"
@inject NavigationManager Navigation
@inject CommentService CommentService
@rendermode InteractiveServer

@code {
    private string userName = string.Empty;
    private string? newComment;
    private List<string> comments = new();
    private string postId = "post-123"; // Should be dynamic

    protected override void OnInitialized()
    {
        userName = $"User-{new Random().Next(1000, 9999)}";

        // Load existing comments
        comments = CommentService.GetComments(postId);

        // Subscribe to updates from CommentService
        CommentService.OnCommentAdded += HandleNewComment;
    }

    private void HandleNewComment(string updatedPostId)
    {
        if (updatedPostId == postId) // Ensure we only update the correct post
        {
            comments = CommentService.GetComments(postId);
            InvokeAsync(StateHasChanged); // ðŸ‘ˆ Force UI update
        }
    }

    private async Task SendComment()
    {
        if (!string.IsNullOrWhiteSpace(newComment))
        {
            await CommentService.AddComment(postId, userName, newComment);
            newComment = string.Empty;
            await InvokeAsync(StateHasChanged); // Ensure UI updates
        }
    }

    public void Dispose()
    {
        // Unsubscribe to prevent memory leaks
        CommentService.OnCommentAdded -= HandleNewComment;
    }
}

<div class="comment-box">
    <h3>Comments</h3>
    <ul>
        @foreach (var comment in comments)
        {
            <li>@comment</li>
        }
    </ul>

    <input @bind="newComment" placeholder="Type a comment..." />
    <button @onclick="SendComment">Send</button>
</div>
